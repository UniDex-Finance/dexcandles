type Token @entity {
  "ID (address)"
  id: ID!

  "Name"
  name: String!
  "Symbol"
  symbol: String!
  "Decimals"
  decimals: BigInt!
  # liquidity across all pairs
  totalLiquidity: BigDecimal!
  # derived prices
  derivedBNB: BigDecimal
  derivedUSD: BigDecimal
  createdAt: Int!
}

type Pair @entity {
    id: ID! # address
    token0: Token!
    token1: Token!
    factory: ID! #factory address
    reserve0: BigDecimal!
    reserve1: BigDecimal!

    # Price in terms of the asset pair
    token0Price: BigDecimal!
    token1Price: BigDecimal!

    reserveBNB: BigDecimal!
    reserveUSD: BigDecimal!

    createdAt: Int!
}

type Bundle @entity {
  id: ID!

  "BNB price, in USD"
  bnbPrice: BigDecimal!
}

enum SwapType {
    BUY,
    SELL
}

type Transaction @entity {
    id: ID!, # time + tokenAddress
    time: Int!
    swapType: SwapType!
    block: Int!
    token0 : Token!
    token1 : Token!
    token0Id : String!
    token1Id : String!
    token0Name : String!
    token1Name : String!
    token0Symbol : String!
    token1Symbol : String!
    from: String!
    to: String!
    transactionAmount: BigDecimal!
    transactionAmountInUSD : BigDecimal!
}

type Candle @entity {
    id: ID! # time + period + srcToken + dstToken
    time: Int!
    period: Int!
    lastBlock: Int!
    token0Id: String!,
    token1Id: String!,
    token0Symbol: String!,
    token1Symbol: String!,
    token0Name: String!,
    token1Name: String!,
    token0: Token!
    token1: Token!
    token0createdAt: Int!
    token1createdAt: Int!
    lastBnbPrice: BigDecimal!
    token0TotalAmount: BigDecimal!
    token1TotalAmount: BigDecimal!
    open: BigDecimal!
    close: BigDecimal!
    low: BigDecimal!
    high: BigDecimal!
    tradeAmountUSD : BigDecimal!
}
